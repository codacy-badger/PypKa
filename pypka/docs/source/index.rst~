.. PypKa documentation master file, created by
   sphinx-quickstart on Tue Mar 26 14:52:09 2019.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

.. toctree::
   :maxdepth: 2
   :caption: Content
   :hidden:

   self
   installation
   example
   features
   methods
   parameters
   future
   GitHub Project <https://github.com/mms-fcul/PypKa>

Pypka
=================================

A python module for flexible Poisson-Boltzmann based p\ :emphasis:`K`\
:sub:`a` calculations.

We have implemented a flexible tool to predict Poisson-Boltzmann-based
p\ :emphasis:`K`\ :sub:`a` values of biomolecules. This is a free and
open source project that provides a simple, reusable and extensible
python API and CLI for p\ :emphasis:`K`\ :sub:`a` calculations with a
valuable trade-off between fast and accurate predictions. With PypKa
one can enable p\ :emphasis:`K`\ :sub:`a` calculations, including
optional proton tautomerism, within existing protocols by adding a few
extra lines of code. PypKa supports CPU parallel computing on
anisotropic (membrane) and isotropic (protein) systems and allows the
user to find a balance between accuracy and speed.

PypKa is written in Python and Cython and it is integrated with the
Poisson-Boltzmann solver DelPhi Fortran77 via `DelPhi4Py
<https://github.com/mms-fcul/DelPhi4Py>`_.


=================
Availability
=================

PypKa can be `easily installed <installation.html>`_ using the pip
package manager.


Source code is freely available at `GitHub <https://github.com/mms-fcul/PypKa>`_
under the LGPL-3.0 license. The package can be installed from `PyPi
<https://pypi.org/project/pypka/>`_.


Subsection 1
------------

.. py:function:: enumerate(sequence[, start=0])

   Return an iterator that yields tuples of an index and an item of the
   *sequence*. (And so on.)


coco


This is a paragraph that contains `a link`_.

.. _a link: https://domain.invalid/

=================
This is a heading
=================




This is a normal text paragraph. The next paragraph is a code sample::

   It is not processed in any way, except
   that the indentation is removed.

   It can span multiple lines.

This is a normal text paragraph again.

>>> 1 + 1
2


.. todo:: test1

.. module:: pypka	  

.. module:: log

.. autoclass:: pypka.Titration
	       
